#!/usr/bin/env bash
set -o posix
#
# Runs the formatter against a list of NDJSON files and writes the output
# next to each file
#
# Example: bash-4.4$ ./scripts/test-messages -o target ../../compatibility-kit/javascript/features/**/*.ndjson
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

OS=$([[ "$(uname)" == "Darwin" ]] && echo "darwin" || echo "linux")
# Determine if we're on 386 or amd64 (ignoring other processors as we're not building on them)
ARCH=$([[ "$(uname -m)" == "x86_64" ]] && echo "amd64" || echo "386")
EXE="./dist/cucumber-json-formatter-${OS}-${ARCH}"

while getopts "o:" option; do
  case "${option}" in
  o)
    outdir=${OPTARG}
    ;;
  *)
    exit 1;
    ;;
  esac
done
shift $((OPTIND - 1))
if [ -z "${outdir}" ]; then
    echo "missing -o"
    exit 1;
fi

exitstatus=0

for ndjson in $*; do
  name="${outdir}/$(basename "${ndjson}")"
  stdout="${name}.json-formatter.json"
  stderr="${name}.json-formatter.err.txt"
  output=$($EXE --format ndjson 2>"${stderr}" >"${stdout}" <${ndjson})

  if [ $? = 0 ]; then
    echo -e "${GREEN}[v]${NC} $ndjson"
  else
    echo -e "${RED}[x]${NC} $ndjson"
    exitstatus=1
  fi
done

exit ${exitstatus}
